<Application x:Class="PersonnelOfficer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PersonnelOfficer" 
             xmlns:control="clr-namespace:PersonnelOfficer.Control"
             xmlns:data="clr-namespace:PersonnelOfficer.Data"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="GroupToggleStyle" TargetType="ToggleButton">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding GroupName, RelativeSource={RelativeSource Self}}" Value="Group"/>
                        <Condition Binding="{Binding BooleanProperty}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="IsChecked" Value="True"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToogleRadioButtonStyle" TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}"/>
        <Style x:Key="GridSplitterStyle" TargetType="GridSplitter">
            <Setter Property="Width" Value="10"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        <Style x:Key="SeparatorStyle" TargetType="Separator">
            <Setter Property="Width" Value="10"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        <Style x:Key="ListViewHorisontalLineStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="ListViewItem.BorderThickness" Value="0" />
            <Setter Property="ListViewItem.Foreground" Value="Black" />
            <Setter Property="ListViewItem.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border BorderThickness="0,0,0,1" BorderBrush="LightGray"
                                            Background="{TemplateBinding Background}">
                            <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                              Width="Auto" Margin="0" Content="{TemplateBinding Content}"/>
                            
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ListViewItem.IsMouseOver" Value="True">
                    <Setter Property="ListViewItem.Background" Value="AliceBlue"/>
                    <Setter Property="ListViewItem.BorderThickness" Value="0" />
                </Trigger>
                <Trigger Property="ListViewItem.IsSelected" Value="True">
                    <Setter Property="Control.Background" Value="AntiqueWhite"/>
                    <Setter Property="ListViewItem.BorderThickness" Value="0" />
                    <Setter Property="ListViewItem.Foreground" Value="Black" />
                    <Setter Property="ListViewItem.FontWeight" Value="Bold" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ListViewHorisontalAndVerticalLinesStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Margin" Value="2,0,0,0"/>
            <Setter Property="Padding" Value="0,2"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}"  Background="{TemplateBinding Background}">
                            <control:GridViewRowPresenterWithGridLines  Columns="{TemplateBinding GridView.ColumnCollection}" Margin="{TemplateBinding Padding}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ListViewItem.IsMouseOver" Value="True">
                    <Setter Property="ListViewItem.Background" Value="AliceBlue"/> 
                </Trigger>
                <Trigger Property="ListViewItem.IsSelected" Value="True">
                    <Setter Property="Control.Background" Value="LightBlue"/> 
                    <Setter Property="ListViewItem.Foreground" Value="Black" />
                    <Setter Property="ListViewItem.FontWeight" Value="Bold" />
                </Trigger>
            </Style.Triggers> 
        </Style>
        <Style x:Key="TextBoxValidationStyle" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self},
                    Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ComboBoxValidationStyle" TargetType="ComboBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self},
                    Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>  
        <ObjectDataProvider x:Key="SexEnum" MethodName="GetValues" 
                            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="data:Sex"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>  
    </Application.Resources>
</Application>
